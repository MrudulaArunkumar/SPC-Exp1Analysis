#########################################################################################
################## Daten einlesen ######################################################

#setwd("C:/Users/KF/Desktop/Ma Daten und Auswertung/Auswertung")
setwd("~/Abteilung Allg Psy II/BSc DA/Kira Franke/Auswertung")
#?bergeordneter Ordner "Auswertung", dieser enth?lt:
#-"data" -> Rohdaten
#-"input" -> aufbereiteten Daten, ready for analysis
#-"scripts" -> R Skripte
#-"plots" -> enth?lt Abbildungen von Ergebnisgrafiken
#-vpcodes -> vpcode Liste f?r das Pr?fungsamt (nochmal in Excel ?ffnen und als Exceldatei speichern)


#read data###
gesamt <- read.csv("data/gesamt.csv", sep = "\t")
gesamt <- gesamt[gesamt$participant != "Y",] # hat ca. 40% Fehler

############################################################################################
########### Auswerten Demografie #########################################################
########################################################################################

#Pakete laden#### 
library(psych)
library(plyr)
library(tidyverse)

partinfo <- ddply(.data = gesamt,
                .variables = .(participant),
                .fun = summarize,
                Alter = Alter[1],
                Geschlecht = Geschlecht[1],
               Muttersprache = Muttersprache[1])


describe(partinfo$Alter)
summary(partinfo$Alter)
table(partinfo$Geschlecht)
table(partinfo$Muttersprache)

#get vp codes and save them ####
names(gesamt)
table(gesamt$Subject_Code)
table(gesamt$participant)

# codes<-ddply(.data = gesamt, 
#              .variables = .(participant), 
#              .fun = summarize, 
#              vpcode=Subject_Code[537])
# 
# #weitere Spalten f?r Pr?fungsamt erg?nzen
# codes<-codes%>%
#   mutate(credit="0.5",
#          semester="SS 2021",
#          responsible="Kira Franke & Carina G. Giesen",
#          study_name="Masterarbeit Kira Franke SS2021")
# codes<-codes[,-1]
# 
# write.csv2(codes, file="vpcodes/CodeListe_MA_Franke_SS2021.csv", row.names = F)

#Daten aufr?umen ####
####### Pr?fen acc gesamt (Auschluss wenn < 75%) bezogen auf Phase 2 und 3 #########

### Mrudula : Code for prolific data files ####
####### PROLIFIC DATA ANALYSIS ##########

# #saving all the csv files in that directory into one variable
# dir <- setwd("D:/PhD/Experiments/Sample Experiments/MA Exp_Prolific/Prolific final data")
# allOldata <- list.files(path = dir, pattern = "*.csv")
# 
# #making the file names into one list
# gesamt <- lapply(allOldata, read_csv)
# 
# #using rbind to save it all in one df
# #using rbind.fill because some columns do not exist in some datafiles, namely the "preResp.key" 
# gesamt <- do.call(rbind.fill,gesamt)
# 
# #saving this merged datafile as one csv
# write.csv(gesamt, file = "gesamt.csv")


### reading this datafile for analysis
#gesamt <- read.csv("gesamt.csv")

table(gesamt$PROLIFIC_PID)
table(gesamt$PROLFIC_PID)#saved twice with different column name but exact same information
gesamt <- gesamt %>% select(-PROLFIC_PID) # removing duplicate
table(gesamt$Phase)


table(gesamt$Phase)

#CGG: nur Phase 2, 3.1, und 3.2 ber?cksichtigen 
ACC <- subset(gesamt, subset= (gesamt$Phase != "Uebung" & gesamt$Phase != "Phase1" & gesamt$Phase != "Phase4" & gesamt$Phase != "" ))

ACC$ERR<-1-ACC$ACC
table(ACC$ACC)
table(ACC$ERR)
round(table(ACC$ACC)/nrow(ACC)*100, digits=3)
#3.509% Fehler (ohne die Person, die ausgeschlossen wird)
### f?r einzelne Phasen ###############
ACC_P2 <- subset(ACC, Phase == "Phase2")
round(table(ACC_P2$ACC)/nrow(ACC_P2)*100, digits=3)

ACC_P31 <- subset(ACC, Phase == "Phase3_1")
round(table(ACC_P31$ACC)/nrow(ACC_P31)*100, digits=3)

ACC_P32 <- subset(ACC, Phase == "Phase3_2")
round(table(ACC_P32$ACC)/nrow(ACC_P32)*100, digits=3)

aggregate(data = ACC, ACC ~ participant, mean) # keiner kleiner als 0.9

data.aggErr <- ddply(.data = ACC, 
                     .variables = c("participant"), 
                     .fun = summarize, 
                     meanErr=mean(ERR))
boxplot(data.aggErr$meanErr)
#2 ausrei?er, eine Vpn hat 40% Fehler: muss ausgeschlossen werden, participant "Y"
#gesamt <- gesamt[gesamt$participant != "Y",]

## Gesamtdatensatz: Ausschluss von Reaktionen <200ms und sehr langsame RTs
#CGG: vorher: nur relevante Phasen ausw?hlen, n?mlich: Phase2, Phase3.1, Phase 3.2

RTdata<-subset(gesamt, subset= (gesamt$Phase != "Uebung" & gesamt$Phase != "Phase1" & gesamt$Phase != "Phase4" & gesamt$Phase != "" ))

#convert RT to numeric
RTdata$RT2<- as.numeric(as.character(RTdata$RT))

#new var for errors
RTdata$ERR<-1-RTdata$ACC

RTdata<-RTdata%>%
  select(RT, RT2, ACC, ERR, everything())
#worked

#in milliseconds
RTdata$RT<-RTdata$RT2*1000

#Fehler ausschlie?en#####
summary(RTdata$RT)
RTdata$RT[RTdata$ACC==0]<-NA

summary(RTdata$RT)
#N=64, 1051 NA,  1051/29952*100=3.51 % Fehler



computeTukeys <- function(x){
  P25 <- quantile(x$RT, .25, na.rm = TRUE, type = 6) 
  P75 <- quantile(x$RT, .75, na.rm = TRUE, type = 6)
  x$Outlier <- P75 + 1.5*(P75 - P25)
  x$Farouts <- P75 + 3.0*(P75 - P25)
  return(x)
}

RTdata <- ddply(RTdata, .(participant), computeTukeys)

table(RTdata$RT)

RTdata$RT[RTdata$RT < 200] <- NA
#gesamt$ACC[gesamt$RT < 200] <- NA

RTdata$RT[RTdata$RT > RTdata$Outlier] <- NA
#gesamt$ACC[gesamt$RT > gesamt$Outlier] <- NA


summary(RTdata$RT)
write.csv2(RTdata, file="input/RTdata.csv", row.names = F)

#N=64, 2282/29952*100=7,62% aller Daten aussgeschlossen aufgrund von Fehlern und/oder TUkey Outliern
#####################################################################################################
############## Auswertung Phase 2 ##################################################################
######################################################################################################

Phase2 <- subset(RTdata, RTdata$Phase == "Phase2")

table(Phase2$correct2, Phase2$praediktiv)
table(Phase2$validity)

#labels erg?nzen

Phase2$validity <- as.factor(Phase2$validity)

Phase2$validity<-factor(Phase2$validity,
                         levels=c(0,1),
                         labels=c("invalid", "valid"))

table(Phase2$validity)

table(Phase2$blocks_2.thisRepN)
Phase2$block <- as.factor(Phase2$blocks_2.thisRepN)

#DAtensatz reduzieren####
Phase2<-Phase2%>%
  select(RT, ACC, validity, praediktiv, block, everything())

#Phase2<-Phase2%>%
#  select(RT, ACC, validity, praediktiv, block, participant)

### Auswertung Accuracy in Phase 2

Phase2.acc <- aggregate(data = Phase2, ACC ~ participant + validity, mean)
Phase2.err <- aggregate(data = Phase2, ERR ~ participant + validity, mean)

Phase2.accb <- aggregate(data = Phase2, ACC ~ validity + participant + block, mean) 
Phase2.errb <- aggregate(data = Phase2, ERR ~ validity + participant + block, mean) 

library(reshape2)

Phase2.acc <- dcast(data = Phase2.acc, formula = participant ~ validity) #### wide f?r t-Test
t.test(x = Phase2.acc$valid, y = Phase2.acc$invalid, alternative = "greater", paired=T) 
## Stand 06.07. mit N = 14 Probanden: p = 0.018, mean h?her f?r x => signifikant besser in validen Trials

Phase2.err <- dcast(data = Phase2.err, formula = participant ~ validity) #### wide f?r t-Test
t.test(x = Phase2.err$valid, y = Phase2.err$invalid, alternative = "less", paired=T) 


### nach Bl?cken: zeitlicher Einfluss? 
library(ez)
library(schoRsch)
ACC2 <- ezANOVA(data = Phase2.accb, dv = ACC, wid = participant, within = .(validity, block), detailed = TRUE, type = 3)
anova_out(ACC2)

ERR2 <- ezANOVA(data = Phase2.errb, dv = ERR, wid = participant, within = .(validity, block), detailed = TRUE, type = 3)
anova_out(ERR2)

#nur validity signifikant


#plot
ezPlot(data=Phase2.errb,
       dv=ERR,
       wid=participant,
       within=.(validity, block),
       x=block,
       split=validity,
       do_bars = F)

#HE validity abbilden
means<-ddply(.data=Phase2.errb,
             .variables = c("validity"),
             .fun= summarise,
             mean=mean(ERR))

ggplot(data=means, mapping=aes(y=mean, x=validity, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, 0.075))+
  labs(y="mittlere Fehlerrate", x="validity")+
  ggtitle("Phase 2: Kontingenzlerneffekt (Fehlerrate)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase2_ERR.bmp")


#moderation durch awareness

Phase2.err<-merge(Phase2.err, AwarePar, by="participant")

anova<-ezANOVA(data = Phase2.err, 
                  wid = participant, 
                  dv = ERR,
                  within = .(validity),
                  between=.(Aware),
                  detailed = TRUE, type = 3)
anova_out(anova)

#plot
means<-ezStats(data = Phase2.err, 
               wid = participant, 
               dv = ERR,
               within = .(validity),
               between=.(Aware))

ezStats(data = Phase2.err, 
        wid = participant, 
        dv = ERR,
        within = .(validity),
        between=.(Aware))

ggplot(data=means, mapping=aes(y=Mean, x=Aware, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, 0.075))+
  labs(y="mittlere Fehlerrate")+
  ggtitle("Phase 2: Kontingenzlerneffekt (Fehlerrate)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase2_ERRxAwareness.bmp")

##### Auswertung RT in Phase 2
#######nur RTs, wenn Reaktion korrekt ###############

#Phase2$RT[Phase2$ACC == 0] <- NA
#sachon passiert

#aggregate
#Phase2.rt <- aggregate(data = Phase2, RT ~ Val, mean)
Phase2.rt <- aggregate(data = Phase2, RT ~ participant + validity, mean)
Phase2.rtb <- aggregate(data = Phase2, RT ~ participant + validity + block, mean)

### t-Test RTs ######
Phase2.rt <- dcast(data = Phase2.rt, formula = participant ~ validity)
t.test(x = Phase2.rt$valid, y = Phase2.rt$invalid, alternative = "less", paired=T) # n.s. (p = 0,44)


anova_rt<-ezANOVA(data = Phase2.rtb, wid = participant, dv = RT,
 within = .(validity, block), detailed = TRUE, type = 3)

anova_out(anova_rt)

#plot
ezPlot(data=Phase2.rtb,
       dv=RT,
       wid=participant,
       within=.(validity, block),
       x=block,
       split=validity,
       do_bars = F)

means<-ddply(.data=Phase2.rtb,
             .variables = c("validity"),
             .fun= summarise,
             mean=mean(RT))

ggplot(data=means, mapping=aes(y=mean, x=validity, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(400, 500))+
  labs(y="mittlere RT (ms)")+
  ggtitle("Phase 2: Kontingenzlerneffekt (RT)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))


ggsave("plots/Phase2_RT.bmp")

#moderation durch awareness

Phase2.rt<-merge(Phase2.rt, AwarePar, by="participant")

anova_rt<-ezANOVA(data = Phase2.rt, 
                  wid = participant, 
                  dv = RT,
                  within = .(validity),
                  between=.(Aware),
                  detailed = TRUE, type = 3)
anova_out(anova_rt)

#plot
means<-ezStats(data = Phase2.rt, 
               wid = participant, 
               dv = RT,
               within = .(validity),
               between=.(Aware))

ezStats(data = Phase2.rt, 
        wid = participant, 
        dv = RT,
        within = .(validity),
        between=.(Aware))

ggplot(data=means, mapping=aes(y=Mean, x=Aware, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(400, 500))+
  labs(y="mittlere RT (ms)")+
  ggtitle("Phase 2: Kontingenzlerneffekt (RT)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))


ggsave("plots/Phase2_RTxAwareness.bmp")


###############################################################################################
################# Auswertung Phase 3 Teil 1 ##########################################################
##############################################################################################

####### Phase 3: Teil 1: Transfereffekte bei Beibehaltung der Kontingenzen f?r S2
Phase3_1 <- subset(RTdata, Phase == "Phase3_1")

#labels erg?nzen

Phase3_1$validity <- as.factor(Phase3_1$validity)

Phase3_1$validity <- factor(Phase3_1$validity,
                    levels=c(0,1),
                    labels=c("invalid", "valid"))

table(Phase3_1$validity)


Phase3_1$block <- as.factor(Phase3_1$blocks_31.thisRepN)
table(Phase3_1$block)

Phase3_1.acc <- aggregate(data = Phase3_1, ACC ~ validity + StimKat + participant, mean)
Phase3_1.err <- aggregate(data = Phase3_1, ERR ~ validity + StimKat + participant, mean)

# ACC31 <- ezANOVA(data = Phase3_1.acc, dv = ACC, wid = participant, within = .(validity, StimKat), detailed = TRUE, type = 3)
# anova_out(ACC31) # keine Effekte erkennbar

ERR31 <- ezANOVA(data = Phase3_1.err, dv = ERR, wid = participant, within = .(validity, StimKat), detailed = TRUE, type = 3)
anova_out(ERR31) # signifikante Interaktion


ezStats(data = Phase3_1.err, dv = ERR, wid = participant, within = .(validity, StimKat))

means<-ezStats(data = Phase3_1.err, dv = ERR, wid = participant, within = .(validity, StimKat))

#plot
ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, .075))+
  labs(y="mittlere Fehlerrate", x="Stimulusart")+
  ggtitle("Phase 3.1: Effekte nach Stimulusart (Fehlerrate)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase31_ERR.bmp")



#### nur f?r S1

Phase3_1.err1 <- subset(Phase3_1.err, Phase3_1.err$StimKat == "S1")


Phase3_1.errS1 <- dcast(data = Phase3_1.err1, formula = participant ~ validity)
t.test(x = Phase3_1.errS1$valid, y = Phase3_1.errS1$invalid, alternative = "less", paired=T) # n.s. (p = 0,66)


Phase3_1.err2 <- subset(Phase3_1.err, Phase3_1.err$StimKat == "S2")


Phase3_1.errS2 <- dcast(data = Phase3_1.err2, formula = participant ~ validity)
t.test(x = Phase3_1.errS2$valid, y = Phase3_1.errS2$invalid, alternative = "less", paired=T) # signifikant.(p = 0,00746)


#moderation durch awareness
Phase3_1.err<-merge(Phase3_1.err, AwarePar, by="participant")
ERR31 <- ezANOVA(data = Phase3_1.err,
                 dv = ERR,
                 wid = participant,
                 within = .(validity, StimKat),
                 between=.(Aware),
                 detailed = TRUE, type = 3)
anova_out(ERR31)

means<-ezStats(data = Phase3_1.err, dv = ERR, wid = participant, within = .(validity, StimKat), between = .(Aware))

#plot
ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  facet_wrap(~Aware)+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, .075))+
  labs(y="Fehlerrate", x="Stimulusart")+
  ggtitle("Phase 3.1: Effekte nach Stimulusart (Fehlerrate)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase31_ERRxAware.bmp")



#######Reaktionszeiten in Phase 3, Teil 1



Phase3_1.rt <- aggregate(data = Phase3_1, RT ~ validity + StimKat + participant, mean)

RT31 <- ezANOVA(data = Phase3_1.rt, dv = RT, wid = participant, within = .(validity, StimKat), detailed = TRUE, type = 3)
anova_out(RT31) #auch hier keine Effekte erkennbar

#stats
ezStats(data = Phase3_1.rt, dv = RT, wid = participant, within = .(validity, StimKat))

means <-ezStats(data = Phase3_1.rt, dv = RT, wid = participant, within = .(validity, StimKat))

#plot
ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(400, 500))+
  labs(y="mittlere RT (ms)", x="Stimulusart")+
  ggtitle("Phase 3.1: Effekt nach Stimulusart (RT)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase31_RT.bmp")

#Folgetest: t-test innerhalb jeder Stimuluskategorie
t.test(RT ~ validity, data =Phase3_1.rt, subset =(StimKat=="S2"), paired=TRUE, alternative="greater" )

t.test(RT ~ validity, data =Phase3_1.rt, subset =(StimKat=="S1"), paired=TRUE, alternative="greater" )

#try t-tests
# #test nur f?r S1-stimuli
# Phase31_S1.rt <- subset(Phase3_1.rt, StimKat == "S1")
# Phase31_S1.rt <- dcast(data = Phase31_S1.rt, formula = participant ~ validity)
# t.test(x = Phase31_S1.rt$valid, y = Phase31_S1.rt$invalid, alternative = "less") # n.s. (p = 0,49)

#Lerneffekte f?r S2-stimuli?
Phase31_S2.rt <- subset(Phase3_1.rt, StimKat == "S2")
Phase31_S2.rt <- dcast(data = Phase31_S2.rt, formula = participant ~ validity)
t.test(x = Phase31_S2.rt$valid, y = Phase31_S2.rt$invalid, alternative = "less", paired = TRUE) # n.s. (p = 0,37)


#moderation mit awareness####
Phase3_1.rt<-merge(Phase3_1.rt, AwarePar, by="participant")
RT31 <- ezANOVA(data = Phase3_1.rt, dv = RT, wid = participant, within = .(validity, StimKat), between=.(Aware), detailed = TRUE, type = 3)
anova_out(RT31) #auch hier keine Effekte erkennbar

#stats
ezStats(data = Phase3_1.rt, dv = RT, wid = participant, within = .(validity, StimKat))

means <-ezStats(data = Phase3_1.rt, dv = RT, wid = participant, within = .(validity, StimKat), between = .(Aware))

ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  facet_wrap(~Aware)+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(400, 500))+
  labs(y="mittlere RT (ms)", x="Stimulusart")+
  ggtitle("Phase 3.1: Effekt nach Stimulusart (RT)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))


ggsave("plots/Phase31_RTxAwareness.bmp")

###########################################################################################
####### Phase 3: Teil 2: Transfereffekte nach Aufhebung der Kontingenzen f?r S2###########
###########################################################################################

Phase3_2 <- subset(RTdata, Phase == "Phase3_2")

#labels erg?nzen

Phase3_2$validity <- as.factor(Phase3_2$validity)

Phase3_2$validity<-factor(Phase3_2$validity,
                      levels=c(0,1),
                      labels=c("invalid", "valid"))

table(Phase3_2$validity)

Phase3_2$block <- as.factor(Phase3_2$trials_3.thisRepN)

####### Accuracy ########

#Phase3_2.acc <- aggregate(data = Phase3_2, ACC ~ validity + StimKat + trials_3.thisRepN, mean)
#Phase3_2.acc <- aggregate(data = Phase3_2, ACC ~ validity + StimKat + participant, mean)
#Phase3_2.accb <- aggregate(data = Phase3_2, ACC ~ validity + StimKat + participant +block, mean)

Phase3_2.err <- aggregate(data = Phase3_2, ERR ~ validity + StimKat + participant, mean)
#Phase3_2.errb <- aggregate(data = Phase3_2, ERR ~ validity + StimKat + participant +block, mean)


# ACC32 <- ezANOVA(data = Phase3_2.acc, dv = ACC, wid = participant, within = .(validity, StimKat), detailed = TRUE, type = 3)
# anova_out(ACC32) #auch hier keine Effekte erkennbar

ERR32 <- ezANOVA(data = Phase3_2.err, dv = ERR, wid = participant, within = .(validity, StimKat), detailed = TRUE, type = 3)
anova_out(ERR32) #auch hier keine Effekte erkennbar

means<-ezStats(data = Phase3_2.err, dv = ERR, wid = participant, within = .(validity, StimKat))

#plot

ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, .075))+
  labs(y="mittlere Fehlerrate", x="Stimulusart")+
  ggtitle("Phase 3.2: Effekte nach Stimulusart (Fehlerrate)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase32_ERR.bmp")


# 
# ACC32b <- ezANOVA(data = Phase3_2.accb, dv = ACC, wid = participant, within = .(validity, StimKat, block), detailed = TRUE, type = 3)
# anova_out(ACC32b) #auch hier keine Effekte erkennbar
# 
# #plot
# ezPlot(data=Phase3_2.accb,
#        dv=ACC,
#        wid=participant,
#        within=.(validity, StimKat,block),
#        x=StimKat,
#        split=validity,
#        col=block,
#        do_bars = F)

#### nur f?r S1

Phase3_2.err1 <- subset(Phase3_2.err, Phase3_2.err$StimKat == "S1")

Phase3_2.errS1 <- dcast(data = Phase3_2.err1, formula = participant ~ validity)
t.test(x = Phase3_2.errS1$valid, y = Phase3_2.errS1$invalid, alternative = "less", paired=T) # n.s. (p = 0,59)


Phase3_2.err2 <- subset(Phase3_2.err, Phase3_2.err$StimKat == "S2")

Phase3_2.errS2 <- dcast(data = Phase3_2.err2, formula = participant ~ validity)
t.test(x = Phase3_2.errS2$valid, y = Phase3_2.errS2$invalid, alternative = "less", paired=T) # signifikant.(p = 0,01047)


#moderation mit awareness####
Phase3_2.err<-merge(Phase3_2.err, AwarePar, by="participant")

ERR32 <- ezANOVA(data = Phase3_2.err, dv = ERR, wid = participant, within = .(validity, StimKat), between=.(Aware), detailed = TRUE, type = 3)
anova_out(ERR32) #auch hier keine Effekte erkennbar

means<-ezStats(data = Phase3_2.err, dv = ERR, wid = participant, within = .(validity, StimKat), between = (Aware))

#plot

ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  facet_wrap(~Aware)+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, .08))+
  labs(y="mittlere Fehlerrate", x="Stimulusart")+
  ggtitle("Phase 3.2: Effekte nach Stimulusart (Fehlerrate)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase32_ERRxAware.bmp")




#######Reaktionszeiten in Phase 3, Teil 2 ##########



Phase3_2.rt <- aggregate(data = Phase3_2, RT ~ validity + StimKat + participant, mean)
Phase3_2.rtb <- aggregate(data = Phase3_2, RT ~ validity + StimKat + participant + block, mean)

RT32 <- ezANOVA(data = Phase3_2.rt, dv = RT, wid = participant, within = .(validity, StimKat), detailed = TRUE, type = 3)
anova_out(RT32) # nicht signifikant


means<-ezStats(data = Phase3_2.rt, dv = RT, wid = participant, within = .(validity, StimKat))

#plot
ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(400, 500))+
  labs(y="mittlere RT (ms)", x="Stimulusart")+
  ggtitle("Phase 3.2: Effekte nach Stimulusart (RT)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase32_RT.bmp")


#Folgetest: t-test innerhalb jeder Stimuluskategorie
t.test(RT ~ validity, data =Phase3_2.rt, subset =(StimKat=="S2"), paired=TRUE, alternative="greater" )

t.test(RT ~ validity, data =Phase3_2.rt, subset =(StimKat=="S1"), paired=TRUE, alternative="greater" )



RT32b <- ezANOVA(data = Phase3_2.rtb, dv = RT, wid = participant, within = .(validity, StimKat, block), detailed = TRUE, type = 3)
anova_out(RT32b) 

means<-ezStats(data = Phase3_2.rtb, dv = RT, wid = participant, within = .(validity, StimKat, block))

#plot
ezPlot(data=Phase3_2.rtb,
       dv=RT,
       wid=participant,
       within=.(validity, StimKat,block),
       x=StimKat,
       split=validity,
       col=block,
       do_bars = F)

#moderation durch awareness
Phase3_2.rt<-merge(Phase3_2.rt, AwarePar, by="participant")

RT32 <- ezANOVA(data = Phase3_2.rt, dv = RT, wid = participant, within = .(validity, StimKat), between=.(Aware), detailed = TRUE, type = 3)
anova_out(RT32) #auch hier keine Effekte erkennbar


means<-ezStats(data = Phase3_2.rt, dv = RT, wid = participant, within = .(validity, StimKat), between=.(Aware))

#plot
ggplot(data=means, mapping=aes(y=Mean, x=StimKat, fill=validity))+
  facet_wrap(~Aware)+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(400, 500))+
  labs(y="mittlere RT (ms)", x="Stimulusart")+
  ggtitle("Phase 3.2: Effekte nach Stimulustyp (RT)")+
  theme_classic()+
  theme(text=element_text(size=20))+
  scale_fill_manual(values = c("white", "black"))

ggsave("plots/Phase32_RTxAware.bmp")


#################################################################################
################# Phase 4: Bewusstsein ?ber Zusammenh?nge? #####################
################################################################################


Phase4 <- subset(gesamt, Phase == "Phase4")

###############################################################
########## Frage 1: Assoziation von S1 und S2 ##################

P4_Frage1 <- subset(Phase4, is.na(resp_FrageS2_4.rt)&is.na(resp_FrageS1_4.rt)) 
Frage1 <- aggregate(data = P4_Frage1, ACC ~ participant, sum) # alle = 4 => alles richtig
table(Frage1$ACC)

#CGG:
#turn ACC into factor
Frage1$ACC<-factor(Frage1$ACC,
                   levels = c(0, 1, 2, 3, 4))

#Prozentangaben korrekt gel?ste S1-S2 Assoziation
round(table(Frage1$ACC)/nrow(Frage1)*100,1)
ggplot(Frage1, aes(x=ACC))+
  geom_bar()+
  ggtitle("Anzahl korrekter Antworten, Abfrage S1-S2 Assoziationen")+
  labs(y="Anzahl")+
  theme_classic()+
  theme(text=element_text(size=20))

ggsave("plots/FreqACC_Frage1.bmp")

###############################################################
########## Frage 2: S2-R ##################

P4_Frage2 <- subset(Phase4, is.na(resp_awareness_assoziativ.rt)&is.na(resp_FrageS1_4.rt)) 
Frage2 <- aggregate(data = P4_Frage2, ACC ~ participant, sum) #Unterschiedlich, reicht von 0-3

summary(Frage2$ACC) #median = 3, d.h. mindestens die H?lfte hatte 3/4
#CGG:

table(Frage2$ACC) 
#Prozentangaben korrekt gel?ste S1-S2 Assoziation
round(table(Frage2$ACC)/nrow(Frage2)*100,1)

#turn ACC into factor
Frage2$ACC<-factor(Frage2$ACC,
                   levels = c(0, 1, 2, 3, 4))

ggplot(Frage2, aes(x=ACC))+
  geom_bar()+
  ggtitle("Anzahl korrekter Antworten, Abfrage S2-R Assoziationen")+
  labs(y="Anzahl")+
  theme_classic()+
  theme(text=element_text(size=20))

ggsave("plots/FreqACC_Frage2.bmp")

###############################################################
########## Frage 3: S1-R ##################

P4_Frage3 <- subset(Phase4, is.na(resp_awareness_assoziativ.rt)&is.na(resp_FrageS2_4.rt))  
Frage3 <- aggregate(data = P4_Frage3, ACC ~ participant, sum) #Unterschiedlich, reicht von 0-4

summary(Frage3$ACC) #median = 1, wesentlich "schlechtere" Leistung bei S2 Stimuli => spricht auch gegen Transfer?

#CGG
table(Frage3$ACC) 
#Prozentangaben korrekt gel?ste Antworten
round(table(Frage3$ACC)/nrow(Frage3)*100,1)

#turn ACC into factor
Frage3$ACC<-factor(Frage3$ACC,
                   levels = c(0, 1, 2, 3, 4))

ggplot(Frage3, aes(x=ACC))+
  geom_bar()+
  ggtitle("Anzahl korrekter Antworten, Abfrage S1-R Assoziationen")+
  labs(y="Anzahl")+
  theme_classic()+
  theme(text=element_text(size=20))

ggsave("plots/FreqACC_Frage3.bmp")

######### Zusammenf?hren f?r Diagramm #################
Fragen <- merge(Frage1, Frage2, by = "participant")
Fragen <- merge(Fragen, Frage3, by = "participant")
Fragen$S1_S2 <- Fragen$ACC.x
Fragen$S2_R <- Fragen$ACC.y
Fragen$S1_R <- Fragen$ACC

#CGG, 13.7.2021
table(Fragen$S1_S2, Fragen$S2_R)

#convert to numeric
Fragen$S1_S2<-as.numeric(as.character(Fragen$S1_S2))
Fragen$S2_R<-as.numeric(as.character(Fragen$S2_R))

#moderator-variable f?r awareness in Frage1 und Frage2 machen
Fragen$Aware<-as.factor(ifelse(Fragen$S1_S2>2 & Fragen$S2_R>2, "aware", "unaware"))

table(Fragen$Aware)

AwarePar<-subset(Fragen, select = c("participant", "Aware"))




library(ez)
library(reshape2)
Fragenlong <- melt(data = Fragen, id.vars = "participant", measure.vars = c("S1_S2", "S2_R", "S1_R"), variable.name = "Frage", value.name = "ACC")

Fragenlong$ACC<-as.factor(Fragenlong$ACC)
ggplot(Fragenlong, aes(x=ACC))+
  geom_bar()+
  facet_wrap(~Frage)+
  ggtitle("Anzahl korrekter Antworten, Awareness Abfragen")+
  labs(y="Anzahl")+
  theme_classic()+
  theme(text=element_text(size=20))

ggsave("plots/FreqACC_Fragen1-3.bmp")

means<-ezStats(data = Fragenlong, dv = ACC, wid = participant, within = .(Frage))
ggplot(data=means, mapping=aes(y=Mean, x=Frage))+
  geom_bar(stat="identity", position="dodge", color="black")+
  coord_cartesian(ylim = c(0, 4))+
  labs(y="mean correct answers", x="question")+
  ggtitle("Phase 4: awareness check")+
  theme_classic()+
  theme(text=element_text(size=20))
)

t.test(x = Fragen$S2_R, mu = 1.3, alternative = "greater")
t.test(x = Fragen$S1_R, mu = 1.3, alternative = "greater")
